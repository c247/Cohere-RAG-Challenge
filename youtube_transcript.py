# importing the module
from youtube_transcript_api import YouTubeTranscriptApi

# retrieve the available transcripts
transcript_list = YouTubeTranscriptApi.list_transcripts('WDAnJpOuhI8&')

# iterate over all available transcripts
# for transcript in transcript_list:

#     # the Transcript object provides metadata
#     # properties
#     print(
#         transcript.video_id,
#         transcript.language,
#         transcript.language_code,
    
#         # whether it has been manually created or
#         # generated by YouTube
#         transcript.is_generated,
        
#         # whether this transcript can be translated
#         # or not
#         transcript.is_translatable,
        
#         # a list of languages the transcript can be
#         # translated to
#         transcript.translation_languages,
#     )

#     # fetch the actual transcript data
#     print(transcript.fetch())

#     # translating the transcript will return another
#     # transcript object
#     print(transcript.translate('en').fetch())

# you can also directly filter for the language you are
# looking for, using the transcript list
# transcript = transcript_list.find_transcript(['en'])

# # or just filter for manually created transcripts
# transcript = transcript_list.find_manually_created_transcript(['en'])

# # importing modules
# from youtube_transcript_api import YouTubeTranscriptApi

# using the srt variable with the list of dictionaries
# obtained by the .get_transcript() function
srt = YouTubeTranscriptApi.get_transcript("WDAnJpOuhI8&")

# creating or overwriting a file "subtitles.txt" with
# the info inside the context manager
with open("subtitles.txt", "w") as f:

        # iterating through each element of list srt
    for i in srt:
        # writing each element of srt on a new line
        f.write("{}\n".format(i["text"]))